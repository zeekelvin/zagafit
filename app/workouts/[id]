'use client';
import { useParams } from 'next/navigation';
import { useEffect, useState } from 'react';
import { supabase } from '../../../lib/supabaseClient';

const workoutData: any = {
  hiit: {
    title: 'HIIT Blast',
    video: 'https://www.youtube.com/embed/ml6cT4AZdqI',
    duration: 600,
  },
  core: {
    title: 'Core Crusher',
    video: 'https://www.youtube.com/embed/AnYl6Nk9GOA',
    duration: 480,
  },
  upper: {
    title: 'Upper Body Sculpt',
    video: 'https://www.youtube.com/embed/kC7bN5ILJmI',
    duration: 540,
  },
};

export default function WorkoutDetail() {
  const { id } = useParams();
  const [timeLeft, setTimeLeft] = useState(0);
  const [note, setNote] = useState('');
  const [isRunning, setIsRunning] = useState(false);

  const workout = workoutData[id as string];

  useEffect(() => {
    let timer: NodeJS.Timeout;
    if (isRunning && timeLeft > 0) {
      timer = setInterval(() => setTimeLeft((t) => t - 1), 1000);
    }
    return () => clearInterval(timer);
  }, [isRunning, timeLeft]);

  const startWorkout = () => {
    setTimeLeft(workout.duration);
    setIsRunning(true);
  };

  const saveLog = async () => {
    await supabase.from('workout_logs').insert([
      {
        workout_id: id,
        duration: workout.duration,
        note,
      },
    ]);
    alert('Workout saved!');
    setIsRunning(false);
    setNote('');
  };

  if (!workout) return <p className="p-6">Workout not found.</p>;

  return (
    <div className="p-6 min-h-screen bg-black text-yellow-400">
      <h1 className="text-3xl font-bold mb-4">{workout.title}</h1>
      <div className="mb-6">
        <iframe
          className="w-full h-64 rounded"
          src={workout.video}
          title="Workout Video"
          frameBorder="0"
          allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
          allowFullScreen
        />
      </div>

      <button
        onClick={startWorkout}
        className="bg-yellow-400 text-black px-4 py-2 rounded mb-4"
        disabled={isRunning}
      >
        {isRunning ? 'Workout in Progress...' : 'Start Workout'}
      </button>

      {isRunning && (
        <div className="text-2xl mb-4">‚è± Time Left: {Math.floor(timeLeft / 60)}:{String(timeLeft % 60).padStart(2, '0')}</div>
      )}

      <textarea
        placeholder="Write post-workout notes..."
        className="text-black w-full p-3 rounded mb-3"
        value={note}
        onChange={(e) => setNote(e.target.value)}
      />
      <button onClick={saveLog} className="bg-yellow-400 text-black px-4 py-2 rounded">
        Save Workout Log
      </button>
    </div>
  );
}
